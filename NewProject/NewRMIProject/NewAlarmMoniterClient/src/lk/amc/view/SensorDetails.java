/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.amc.view;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.amc.controller.SensorController;
import lk.amc.dto.Sensor;

/**
 *
 * @author Dakshika
 */
public class SensorDetails extends javax.swing.JPanel implements ActionListener {

   // javax.swing.Timer timer = new javax.swing.Timer(900, this);
     javax.swing.Timer timer = new javax.swing.Timer(5000,  this);
     

    /**
     * Creates new form SenosrDetails
     */
    private DefaultTableModel dtm;

    public SensorDetails() {
        initComponents();
        dtm = (DefaultTableModel) sensorTable.getModel();
        timer.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sensorTable = new javax.swing.JTable();

        sensorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Status", "Sensor Id", "Floor Number", "Room Number", "Smoke Level", "Co2 Level"
            }

        ));
        jScrollPane1.setViewportView(sensorTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable sensorTable;
    // End of variables declaration//GEN-END:variables

    private void loadSernsorDetails() {

        try {
               //            ItemBrandNameDTO brandNameList = itemBrandNameController.searchItemBrandName(name);
            //System.out.println("load");
            List<Sensor> s1 = SensorController.getAllSensorDetails();

            dtm.setRowCount(0);
            for (Sensor s2 : s1) {
                Object[] rowData = {s2.getStatus(), s2.getSensorId(), s2.getFloorNumber(), s2.getRoomNumber(), s2.getSmokeLevel(), s2.getCo2Level()};

                dtm.addRow(rowData);
                if (s2.getFloorNumber() > 5) {
                    setBackground(Color.BLACK);
                     setForeground(Color.WHITE);
                    // setForeground(Color.WHITE);
                }
                //dtm.addRow();
            }
        } catch (Exception ex) {
            Logger.getLogger(SensorDetails.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
 
    @Override
    public void actionPerformed(ActionEvent e) {
        loadSernsorDetails();
    }

}
